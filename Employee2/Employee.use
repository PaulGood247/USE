
model Employee

-- classes

class Person
attributes
  name : String
  age : Integer
  salary : Real

operations
	bday()
	begin
	   self.age := self.age + 1
    end
	
    raiseSalary(rate : Real) : Real 
    begin
        self.salary := self.salary * (1.0 + rate);
        result := self.salary
    end
    
    pre over18: 
        age >= 18
    post raiseSalaryPost: 
        salary = salary@pre * (1 + rate)
    
end



class Company
attributes
  name : String
  location : String
  
operations
  hire(p : Person)
  begin
      insert (p, self) into WorksFor;	 
	  p.salary := 50000
  end
  
  fire(p : Person)
  post firePost: employees->excludes(p)
end

-- associations

association WorksFor between
  Person[*] role employees
  Company[0..1] role employer
end

-- constraints

constraints
context Person::raiseSalary(rate : Real) : Real
    post resultPost:
        result = salary

context Company::hire(p : Person)  
  pre  hirePre1: p.isDefined()
  pre  hirePre2: employees->excludes(p)
  pre  hirePre3: p.age > 16  
  post hirePost: employees->includes(p)


context Company::fire(p : Person)
  pre  firePre:  employees->includes(p)


